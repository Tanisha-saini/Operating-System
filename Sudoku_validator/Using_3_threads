%%writefile sudokuvalidator.cpp
#include<iostream>
#include <pthread.h>
#include<unistd.h>
#include <stdio.h>
#include<sys/types.h>
using namespace std;
 
int sudoku[9][9]={
        {6, 2, 4, 5, 3, 9, 1, 8, 7},
        {5, 1, 9, 7, 2, 8, 6, 3, 4},
        {8, 3, 7, 6, 1, 4, 2, 9, 5},
        {1, 4, 3, 8, 6, 5, 7, 2, 9},
        {9, 5, 8, 2, 4, 7, 3, 6, 1},
        {7, 6, 2, 3, 9, 1, 4, 5, 8},
        {3, 7, 1, 9, 5, 6, 8, 4, 2},
        {4, 9, 6, 1, 8, 2, 5, 7, 3},
        {2, 8, 5, 4, 7, 3, 9, 1, 6}};

int sumofrow,sumofcol,sum1,sum2,sum3;
bool flag=0;
 
void *row(void *param);
void *column(void *param);
void *validatesubgrid(void *param);
 
int main(int argc,char *argv[])
{
    for(int i=0;i<9;i++)
    {
        for(int j=0;j<9;j++)
        {
            if(sudoku[i][j]<1 || sudoku[i][j]>9)                                        //checking if there is any element other than 1 to 9
            {
                cout<<"Sudoku invaid (includes value < 0 or value > 9)";
                exit(0);
            }
        }
    }
    
    pthread_t tid1,tid2,tid3;                                                                  /*thread identifier */
    pthread_attr_t attr;                                                                  /*set of thread attributes*/
    
    pthread_attr_init(&attr);
 
    pthread_create(&tid1,&attr,row,NULL);                                                 //thread to check if rows are valid
    pthread_join(tid1,NULL);
    pthread_create(&tid2,&attr,column,NULL);                                              //thread to check if columns are valid 
    pthread_join(tid2,NULL);
    pthread_create(&tid3,&attr,validatesubgrid,NULL);                                     //thread to check if all 9 subgrids are valid
    pthread_join(tid3,NULL);
 
    if (flag==1)
    {
        cout<<"Sudoku is Invalid";
    }
    else
    {
        cout<<"Sudoku is valid";
    }
    return 0;
}
 
void *row(void *param)                                                                //function to check if all the numbers in the row are different 
{
    for(int i=0;i<9;i++)
    {
        for(int k=i;k==i;k++)                                                         //checking for ith roww
        {
            sumofrow=0;
            for(int j=0;j<9;j++)  
            {
                sumofrow=sumofrow+sudoku[i][j];                                       //adding all the elements of ith row 
            }
        }
        if(sumofrow!=45)
        {
            flag=1;
        }
    }
}

void *column(void *param)                                                         //function to check if all the numbers in the column are different
{
    for(int j=0;j<9;j++)                                                          
    {
        for(int k=j;k==j;k++)                                                     //checking jth column
        {
            sumofcol=0;
            for(int i=0;i<9;i++)
            {
                sumofcol=sumofcol+sudoku[i][j];                                   //adding all the elements of jth columns
            }
        }
        if(sumofcol!=45)
        {
            flag=1;
        }
    }
}

void *validatesubgrid(void *param)                                                //function to check if all the subgrids have all 9 digits(1-9)
{
    for (int k=1;k<=3;k++) 
    {
        sum1=0,sum2=0,sum3=0;
        int l = (k-1)*3;
        for (int i=l;i<k*3;i++) 
        {
            for(int j=0;j<3;j++)
            {
                sum1 = sum1+sudoku[i][j];
            }
            for (int j=3;j<6;j++)
            {
                sum2 = sum2+sudoku[i][j];
            }
            for (int j=6;j<9;j++) 
            {
                sum3 = sum3+sudoku[i][j];
            }
        }
        if (sum1!=45||sum2!=45||sum3!=45)
            flag=1;
		}
}

//Run
%%script bash 
g++ -pthread sudokuvalidator.cpp -o sudokuvalidator
./sudokuvalidator
